# Generated by Django 4.2.7 on 2025-08-13 09:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("contract", "Contract"),
                            ("agreement", "Agreement"),
                            ("terms", "Terms of Service"),
                            ("policy", "Privacy Policy"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=main.models.document_upload_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf", "docx", "txt"]
                            )
                        ],
                    ),
                ),
                ("original_text", models.TextField(blank=True)),
                ("processed_text", models.TextField(blank=True)),
                ("file_size", models.BigIntegerField(default=0)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("is_processed", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="LegalTerm",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("term", models.CharField(max_length=200, unique=True)),
                ("definition", models.TextField()),
                ("plain_language_explanation", models.TextField()),
                ("examples", models.TextField(blank=True)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["term"],
            },
        ),
        migrations.CreateModel(
            name="RiskAnalysis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("overall_risk_score", models.FloatField(default=0.0)),
                (
                    "overall_risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                ("high_risk_clauses_count", models.IntegerField(default=0)),
                ("medium_risk_clauses_count", models.IntegerField(default=0)),
                ("low_risk_clauses_count", models.IntegerField(default=0)),
                ("analysis_summary", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_analysis",
                        to="main.document",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentSummary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("plain_language_summary", models.TextField()),
                ("legal_summary", models.TextField(blank=True)),
                ("key_points", models.JSONField(default=list)),
                ("word_count", models.IntegerField(default=0)),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "document",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="summary",
                        to="main.document",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentProcessingLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "step",
                    models.CharField(
                        choices=[
                            ("upload", "Document Upload"),
                            ("extraction", "Text Extraction"),
                            ("summarization", "AI Summarization"),
                            ("clause_detection", "Clause Detection"),
                            ("risk_analysis", "Risk Analysis"),
                            ("glossary_processing", "Glossary Processing"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processing_logs",
                        to="main.document",
                    ),
                ),
            ],
            options={
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="Clause",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "clause_type",
                    models.CharField(
                        choices=[
                            ("penalty", "Penalty/Fine"),
                            ("auto_renewal", "Auto-Renewal"),
                            ("termination", "Termination"),
                            ("indemnification", "Indemnification"),
                            ("liability", "Liability"),
                            ("confidentiality", "Confidentiality"),
                            ("intellectual_property", "Intellectual Property"),
                            ("governing_law", "Governing Law"),
                            ("dispute_resolution", "Dispute Resolution"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=30,
                    ),
                ),
                ("original_text", models.TextField()),
                ("start_position", models.IntegerField()),
                ("end_position", models.IntegerField()),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                ("risk_score", models.FloatField(default=0.0)),
                ("plain_language_summary", models.TextField(blank=True)),
                ("risk_explanation", models.TextField(blank=True)),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clauses",
                        to="main.document",
                    ),
                ),
            ],
            options={
                "ordering": ["start_position"],
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_id", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_sessions",
                        to="main.document",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[("user", "User Question"), ("assistant", "AI Answer")],
                        max_length=10,
                    ),
                ),
                ("content", models.TextField()),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("sources", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "chat_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="main.chatsession",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
    ]
