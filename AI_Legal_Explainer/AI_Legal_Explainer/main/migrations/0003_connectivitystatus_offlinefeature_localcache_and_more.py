# Generated by Django 5.2.5 on 2025-08-14 08:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("main", "0002_documentsummary_language_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ConnectivityStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_online", models.BooleanField(default=True)),
                ("last_online_check", models.DateTimeField(auto_now=True)),
                ("offline_since", models.DateTimeField(blank=True, null=True)),
                (
                    "connection_quality",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("offline", "Offline"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("api_endpoints_status", models.JSONField(default=dict)),
            ],
            options={
                "verbose_name_plural": "Connectivity Statuses",
            },
        ),
        migrations.CreateModel(
            name="OfflineFeature",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("feature_name", models.CharField(max_length=100, unique=True)),
                ("is_available_offline", models.BooleanField(default=True)),
                ("requires_internet", models.BooleanField(default=False)),
                (
                    "fallback_mode",
                    models.CharField(
                        blank=True,
                        help_text="Alternative mode when offline",
                        max_length=50,
                    ),
                ),
                ("local_model_required", models.BooleanField(default=False)),
                (
                    "cache_strategy",
                    models.CharField(
                        choices=[
                            ("persistent", "Persistent Cache"),
                            ("temporary", "Temporary Cache"),
                            ("no_cache", "No Caching"),
                        ],
                        default="persistent",
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=5, help_text="Priority for offline mode (1-10)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["priority", "feature_name"],
            },
        ),
        migrations.CreateModel(
            name="LocalCache",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cache_key", models.CharField(max_length=255, unique=True)),
                ("cache_data", models.JSONField()),
                (
                    "cache_type",
                    models.CharField(
                        choices=[
                            ("document_summary", "Document Summary"),
                            ("clause_analysis", "Clause Analysis"),
                            ("risk_assessment", "Risk Assessment"),
                            ("glossary_term", "Glossary Term"),
                            ("ai_model", "AI Model"),
                            ("user_preferences", "User Preferences"),
                        ],
                        max_length=50,
                    ),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("access_count", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "Local Caches",
                "indexes": [
                    models.Index(
                        fields=["cache_key"], name="main_localc_cache_k_33c6a0_idx"
                    ),
                    models.Index(
                        fields=["cache_type"], name="main_localc_cache_t_536802_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="main_localc_expires_0b85c3_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("feature_name", models.CharField(max_length=100)),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("document_upload", "Document Upload"),
                            ("text_extraction", "Text Extraction"),
                            ("ai_summarization", "AI Summarization"),
                            ("clause_detection", "Clause Detection"),
                            ("risk_analysis", "Risk Analysis"),
                            ("chat_query", "Chat Query"),
                            ("glossary_lookup", "Glossary Lookup"),
                            ("offline_operation", "Offline Operation"),
                        ],
                        max_length=50,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("duration_ms", models.FloatField(blank=True, null=True)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                ("resource_usage", models.JSONField(default=dict)),
                ("cache_hit", models.BooleanField(default=False)),
                ("offline_mode", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["feature_name"], name="main_perfor_feature_fe40f4_idx"
                    ),
                    models.Index(
                        fields=["operation_type"], name="main_perfor_operati_64622f_idx"
                    ),
                    models.Index(
                        fields=["start_time"], name="main_perfor_start_t_dd12da_idx"
                    ),
                    models.Index(
                        fields=["success"], name="main_perfor_success_eef3e6_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TransparencyPreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "explanation_detail_level",
                    models.CharField(
                        choices=[
                            ("very_simple", "Very Simple"),
                            ("simple", "Simple"),
                            ("medium", "Medium"),
                            ("detailed", "Detailed"),
                            ("legal_detailed", "Legal Detailed"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("show_confidence_scores", models.BooleanField(default=True)),
                ("show_source_citations", models.BooleanField(default=True)),
                ("show_technical_details", models.BooleanField(default=False)),
                ("auto_adjust_complexity", models.BooleanField(default=True)),
                (
                    "preferred_explanation_style",
                    models.CharField(
                        choices=[
                            ("conversational", "Conversational"),
                            ("formal", "Formal"),
                            ("technical", "Technical"),
                            ("educational", "Educational"),
                        ],
                        default="conversational",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transparency_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "explanation_detail_level")},
            },
        ),
    ]
